/*
    [DATABASE: POSTRESQL]
    ЛАБОРАТОРНАЯ РАБОТА №1. ОБЩАЯ ЧАСТЬ
    13 ГРУППА 3 КУРС
    ПЕТРОВ АНДРЕЙ АЛЕКСАНДРОВИЧ

    ЗАДАНИЕ 2.
 */

-- a) Составьте программу вычисления налога и вставте её в таблицу SALARY
-- с помощью простого цикла (loop) с курсором и оператором if;


CREATE PROCEDURE CALC_TAX(a integer, b integer)
LANGUAGE SQL
AS $$
INSERT INTO tbl VALUES (a);
INSERT INTO tbl VALUES (b);
$$;


CREATE OR REPLACE PROCEDURE TAX_SIMPLE_LOOP_IF AS SUMSAL NUMBER(16);
BEGIN
FOR R IN (SELECT * FROM SALARY)
        LOOP
SELECT SUM(SALVALUE)
INTO SUMSAL
FROM SALARY S
WHERE S.EMPNO = R.EMPNO
  AND S.MONTH < R.MONTH
  AND S.YEAR = R.YEAR;

IF SUMSAL < 20000 THEN
UPDATE SALARY
SET TAX = R.SALVALUE * 0.09
WHERE EMPNO = R.EMPNO
  AND MONTH = R.MONTH
  AND YEAR = R.YEAR;
ELSE IF SUMSAL < 30000 THEN
UPDATE SALARY
SET TAX = R.SALVALUE * 0.12
WHERE EMPNO = R.EMPNO
  AND MONTH = R.MONTH
  AND YEAR = R.YEAR;
ELSE
UPDATE SALARY
SET TAX = R.SALVALUE * 0.15
WHERE EMPNO = R.EMPNO
  AND MONTH = R.MONTH
  AND YEAR = R.YEAR;
END IF;
END LOOP;
COMMIT;
END TAX_SIMPLE_LOOP_IF;

-- b) с помощью простого цикла (loop) с курсором и оператора case;
CREATE OR REPLACE PROCEDURE TAX_LOOP_CUR_CASE AS SUMSAL NUMBER(16);
CURSOR CUR IS
SELECT EMPNO, SALVALUE, TAX, YEAR, MONTH
FROM SALARY FOR UPDATE OF TAX;
R      CUR%ROWTYPE;
BEGIN
OPEN CUR;
LOOP
FETCH CUR INTO R;
EXIT WHEN CUR%NOTFOUND;
SELECT SUM(SALVALUE)
INTO SUMSAL
FROM SALARY S
WHERE S.EMPNO = R.EMPNO
  AND S.MONTH < R.MONTH
  AND S.YEAR = R.YEAR;

UPDATE SALARY
SET TAX = CASE
            WHEN SUMSAL < 20000 THEN R.SALVALUE * 0.09
            WHEN SUMSAL < 30000 THEN R.SALVALUE * 0.12
            ELSE R.SALVALUE * 0.15 END

WHERE EMPNO = R.EMPNO
  AND MONTH = R.MONTH
  AND YEAR = R.YEAR;
END LOOP;
CLOSE CUR;
COMMIT;
END TAX_LOOP_CUR_CASE;


-- c) с помощью курсорного цикла FOR;
CREATE OR REPLACE PROCEDURE TAX_CUR_LOOP_CASE AS SUMSAL NUMBER;
CURSOR CUR IS
SELECT EMPNO, SALVALUE, TAX, YEAR, MONTH
FROM SALARY FOR UPDATE OF TAX;
BEGIN
FOR R IN CUR
        LOOP
SELECT SUM(SALVALUE)
INTO SUMSAL
FROM SALARY S
WHERE S.EMPNO = R.EMPNO
  AND S.MONTH < R.MONTH
  AND S.YEAR = R.YEAR;

UPDATE SALARY
SET TAX = CASE
            WHEN SUMSAL < 20000 THEN R.SALVALUE * 0.09
            WHEN SUMSAL < 30000 THEN R.SALVALUE * 0.12
            ELSE R.SALVALUE * 0.15 END

WHERE EMPNO = R.EMPNO
  AND MONTH = R.MONTH
  AND YEAR = R.YEAR;
END LOOP;
COMMIT;
END TAX_CUR_LOOP_CASE;

-- d) с помощью курсора с параметром, передавая номер сотрудника, для которого необходимо посчитать
--    налог.
CREATE OR REPLACE PROCEDURE TAX_PARAM(EMPID NUMBER) AS CURSOR CUR IS
SELECT EMPNO, SALVALUE, TAX, YEAR, MONTH
FROM SALARY
WHERE EMPNO = EMPID FOR UPDATE OF TAX;
SUMSAL NUMBER(16);
BEGIN
FOR R IN CUR
        LOOP
SELECT SUM(SALVALUE)
INTO SUMSAL
FROM SALARY S
WHERE S.EMPNO = R.EMPNO
  AND S.MONTH < R.MONTH
  AND S.YEAR = R.YEAR;

UPDATE SALARY
SET TAX = CASE
            WHEN SUMSAL < 20000 THEN R.SALVALUE * 0.09
            WHEN SUMSAL < 30000 THEN R.SALVALUE * 0.12
            ELSE R.SALVALUE * 0.15 END

WHERE EMPNO = R.EMPNO
  AND MONTH = R.MONTH
  AND YEAR = R.YEAR;
END LOOP;
COMMIT;
END TAX_PARAM;